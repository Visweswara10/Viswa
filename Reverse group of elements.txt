Reverse group of elements




Given a linked list, write a program to reverse every k nodes in the linked list (where k is an input).

Input Format

The input should be numbers (until user enters a negative value.

Constraints

1<=n<=10^7

Output Format

The output should be numbers in the list in separate line.

Sample Input 0

1
2
3
4
5
6
7
8
-1
3
Sample Output 0

3
2
1
6
5
4
8
7
Sample Input 1

1
2
3
4
5
6
7
8
-1
4
Sample Output 1

4
3
2
1
8
7
6
5






class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=self.tail=None
    def insert(self,data):
        n=Node(data)
        if self.head==None:
            self.head=self.tail=n
            return 
        self.tail.next=n
        self.tail=n
    def reverse(self,start):
        c=0
        temp=start
        prev=None
        while temp:
            c+=1
            if c<=k:
                s=temp.next
                nxt=temp.next
                temp.next=prev
                prev=temp
                temp=nxt
            else:
                break
        end=prev
        return end,s
                
    def reversegroup(self):
        lsth=Node(0)
        lst=lsth
        start=self.head
        while start:
            var=start
            end,start=s.reverse(start)
            lst.next=end
            lst=var
            var.next=start
        self.head=lsth.next
            
    def show(self):
        temp=self.head
        while temp:
            print(temp.data)
            temp=temp.next
            
s=LinkedList()
while True:
    x=int(input())
    if x!=-1:
        s.insert(x)
    else:
        break
k=int(input())

s.reversegroup()
s.show()